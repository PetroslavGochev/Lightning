@model Lightning.Models.DBModels.Request
@using Microsoft.AspNetCore.Identity
@using Lightning.Models.DBModels;

@inject UserManager<LightningUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Request</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateFrom)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateFrom)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateTo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateTo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Package)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Package)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
    </dl>
</div>
<div>
    @{
        if (User.Identity.Name == "rosenbobchev3@abv.bg")
        {

            <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        }
     }
    <a asp-action="Index">Back to List</a>
</div>
